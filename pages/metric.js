import Head from 'next/head'
import { v4 as uuidv4 } from 'uuid';
import styles from '../styles/Home.module.css'
import {
  createInstance
} from "@optimizely/optimizely-sdk";

const sdkKey = process.env.NEXT_PUBLIC_SDK_KEY;

export default function Home() {
  const optimizelyClient = createInstance({
    sdkKey: sdkKey,
    eventBatchSize: 100,
    eventFlushInterval: 3000,
    datafileOptions: {
      autoUpdate: true,
      updateInterval: 600000, // 10 minutes
    },
  });

  const userId = uuidv4();
  let optimizelyUserContext;

  optimizelyClient.onReady().then(() => {
    optimizelyUserContext = optimizelyClient.createUserContext(
      userId,
    );
  })

  // Example Of Sending An Event
  // Bounce rate and exit rate metrics are only available for Optimizely Web projects.
  const onClick = () => {
    console.log("click");

    // Unique conversions, The unique conversions metric tracks the number of visitors who convert. Each visitor who converts is counted only once, no matter how many times they click.
    // The total conversions metric tracks the total number of conversions. While the unique conversions metric only counts the first time a user interacts with your event, total conversions will count every interaction, regardless of whether or not a particular user has already converted on a previous visit.
    optimizelyUserContext.trackEvent('viewedpage');
  }

  const createTotalValueMetric = () => {

    const eventKey =  "totalValue";
    const attributes = {};

    // A floating point value that is used to track a custom value for your experiments. Use this to pass the value for numeric metrics.
    // We do not recommend using total value metrics to track monetary values
    const eventTags = {
      value:        4.99
    };

    optimizelyClient.track(eventKey, userId, attributes, eventTags);
  }

  const createRevenueMetric = () => {
    const eventKey =  "revenueMetric";
    const attributes = {};
    const averageOrderValue = 7281;

    // revenue is an integer value that is used to track the revenue metric for your experiments, aggregated across all conversion events. Note that:
    var eventTags = {
      revenue: averageOrderValue
    };

    optimizelyClient.track(eventKey, userId, attributes, eventTags);
  }

  return (
    <>
      <Head>
        <title>Optimizely Fullstack Javascript</title>
        <meta name="description" content="Generated by JonDJones" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.container}>
        <main className={styles.main}>
          <h1 className={styles.title}>
            Send Metric Example
          </h1>
          <h5>
            ( See console )
          </h5>
          <button onClick={onClick} className={styles.grid}>
            Generated Unique and total conversion metric
          </button>
          <button onClick={createRevenueMetric} className={styles.grid}>
            Generated revenue metric
          </button>
          <button onClick={createTotalValueMetric} className={styles.grid}>
            Generated total value metric
          </button>
        </main>
      </div>
    </>
  )
}
